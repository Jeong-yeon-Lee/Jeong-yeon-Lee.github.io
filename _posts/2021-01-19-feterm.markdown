---
title: 프론트엔드 기술 용어들 정리
excerpt: 현업 구인 공고글에 있는 기술 용어들
header:
  teaser: /assets/images/blessing.png
  overlay_image: /assets/images/blessing.png
  overlay_filter: 0.2

categories:
  - Memos
tags:
  - FE
---

## 프론트엔드 기술 용어들 정리

현업 구인 공고글들을 보다보니 긴가민가 모든 것이 헷갈려서 자료들을 참고해서 간단하게 정리해본다!😂  
<span style="color:grey; font-size:small"> 사실 알아들을 수 있는 말만 정리했음,, 거의 용어정리와 읽어야 할 것들 링크 정리,,, 간신히,,, 이해도가 높아지면 점점 내용을 추가할 것이다!!!!! 얼른 허접을 탈출해야지,,,</span>

### 웹표준

- 웹에서 표준적으로 사용되는 기술이나 규칙
- 표준화 단체인 W3C가 권고한 표준안에 따라 웹사이트를 작성할 때 이용하는 HTML, CSS, JavaScript 등에 대한 규정이 담겨 있다
- 어떤 운영체제나 브라우저를 사용하더라도 웹페이지가 동일하게 보이고 정상 작동해야함을 의미

출처 및 참고: <https://goddaehee.tistory.com/244>

### SPA(Single Page Application) 서비스 개발

- 서버로부터 완전한 새로운 페이지를 불러오지 않고 현재의 페이지를 동적으로 다시 작성함으로써 사용자와 소통하는 웹 애플리케이션이나 웹사이트
- 현재 웹개발의 트랜드! 라고 한다. SPA형태는 브라우저에 최초에 한번 페이지 전체를 로드하고, 이후부터는 특정 부분만 Ajax를 통해 데이터를 바인딩하는 방식
- SPA 중심에는 대표적인 라이브러리/프론트엔드 프레임워크 `React, Vue, Angular`가 있다.

![HelloWorld!](https://linked2ev.github.io/assets/img/devlog/201808/2018-08-01-SPA-step1.png)

출처 및 참고:

1. <https://linked2ev.github.io/devlog/2018/08/01/WEB-What-is-SPA/>
2. <https://velog.io/@pkbird/Single-Page-Application>

그럼 이 `SPA`의 중심에 있다는 것들,,,

### <span style="color:blue">React</span>

- Facebook이 개발(Facebook, Instagram 및 WhatsApp 등 사용)
-

#### <span style="color:purple">ReactJS</span>

- 사용자 인터페이스(UI)를 만들기 위한 자바스크립트(JavaScript) 오픈소스 라이브러리
- -서버에서 코드를 받아 페이지를 다시 렌더링 해야하는 문제를 해결하기 위해 만들어졌다.
- 웹, 웹 앱, SPA등 개발 시 사용
- 프론트와 서버 사이드 모두 제공

#### <span style="color:purple">React Native</span>

- 자바스크립트 오픈소스 모바일 앱 프레임워크
- 네이티브 모바일 앱을 만들 수 있게 도와줌  
  (네이티브 앱은 기본적으로 특정 플랫폼이나 디바이스에서 사용하도록 개발된 앱을 의미)  
  ->웹 개발자에게 모바일 앱 개발을 쉽게 해줌
- JAVA, Swift 아니어도 JavaScript로 iOS 및 Android 앱 만들 수 있음

출처 및 참고:

1. <https://zeddios.tistory.com/409>
2. <https://gaemi606.tistory.com/132>

<span style="color:grey; font-size:small"> ReactJS는 라이브러리고(JQuery같은...?) React Native는 프레임워크인가..중얼중얼,,,Redux란 말도 React랑 같이 자주 보이기에 메모해 둔다.. 아직 이해 못함...  
 </span>

#### <span style="color:purple">또 React는 Redux, Next.js 등도 함께 언급되는 경우를 많이 보았다.</span>

[&#10024; React + Redux 플로우의 이해](https://medium.com/@ca3rot/%EC%95%84%EB%A7%88-%EC%9D%B4%EA%B2%8C-%EC%A0%9C%EC%9D%BC-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-%EC%89%AC%EC%9A%B8%EA%B1%B8%EC%9A%94-react-redux-%ED%94%8C%EB%A1%9C%EC%9A%B0%EC%9D%98-%EC%9D%B4%ED%95%B4-1585e911a0a6)  
대략 React는 React 컴포넌트 자신이 개별적으로 상태관리를 한다. React+Redux는 상태관리를 하는 전용 장소(store)에서 상태를 관리하고, React 컴포넌트는 그걸 보여주기만 하는 용도로 쓰인다. 자세한 것은 클릭해서 볼 것!  
[&#10024; Next.js](https://medium.com/@msj9121/next-js-%EC%A0%9C%EB%8C%80%EB%A1%9C-%EC%95%8C%EA%B3%A0-%EC%93%B0%EC%9E%90-8727f76614c9)  
대략 Next.js는 React의 SSR(Server Side Rendering)을 쉽게 구현할 수 있게 도와주는 간단한 프레임워크. 자세한 것은 클릭해서 볼 것!

### <span style="color:blue">Vue.js </span>

- 웹 애플리케이션의 사용자 인터페이스를 만들기 위해 사용하는 오픈 소스 프로그레시브 자바스크립트 프레임워크
- MVVM(Model-View-ViewModel) 아키택처를 활용
- 리액트와 앵귤러의 장점을 가짐
- Angular 에 비해서 단순하다

출처 및 참고:

1. <https://k39335.tistory.com/60>
2. <https://velog.io/@leyuri/Vue.js-%EC%86%8C%EA%B0%9C>

### <span style="color:blue">Angular </span>

- `TypeScript` 기반 오픈 소스 프론트엔드 웹 애플리케이션 프레임워크
- AngularJS의 재작성된 버전
- Google이 개발

1. <https://ko.wikipedia.org/wiki/%EC%95%B5%EA%B7%A4%EB%9F%AC_(%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98_%ED%94%8C%EB%9E%AB%ED%8F%BC)>
2. <https://www.samsungsds.com/kr/insights/frameworks.html>

<span style="color:grey; font-size:small"> Vue < React< Anglular 순서로 어렵다고 한당,,, </span>

### <span style="color:blue">TypeScript</span>

- Microsoft에서 개발 및 유지 관리 하는 오픈 소스 프로그래밍 언어
- 대규모 애플리케이션을 개발하는 데 자바스크립트가 어렵고 불편하다는 불만에 대응하기 위해 개발됨
- 자바스크립트를 확장한 언어
  ->JavaScript 의 모든 구문과 의미를 지원 하는 동시에 정적 유형 지정 및 ECMAScript의 상위 집합 인 더 풍부한 구문과 같은 몇 가지 추가 기능을 제공
- 정적 타입을 지원한다는 장점(JS는 동적타입언어) [&#10024;정적타입과 동적타입의 차이](https://inpages.tistory.com/95)

출처 및 참고:

1. https://velog.io/@taeg92/TypeScript-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0
2. https://shlee0882.tistory.com/47

### <span style="color:blue">Node.js</span>

- 자바스크립트 언어로 구현된 서버사이드 언어
- V8이라는 구글 크롬 내장 엔진(자바스트립트엔진)으로 실행된다.

출처 및 참고:  
<https://asfirstalways.tistory.com/43>  
<https://programmingsummaries.tistory.com/328>
